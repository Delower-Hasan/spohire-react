/* Job Offers Start */
.job_offer {
    padding: 100px 45px 50px 75px;
    position: relative;
}

.job_offer::before {
    position: absolute;
    content: "";
    background: linear-gradient(180deg, #FFF 0%, #EFF7FF 100%);
    width: 100%;
    height: 50%;
    top: 0;
    left: 0;
    z-index: -1;
}

.personalInfo {
    border-radius: 16px;
    border: 1px solid #DFE5F1;
    background: #FFF;
    padding: 31px 24px;
    position: relative;
}

.personalInfo .message {
    border: none;
    background: transparent;
    position: absolute;
    top: -40px;
    right: 16%;
}

.job_offerSlider {
    text-align: center;
}

.job_offerSlider img {
    border-radius: 7px;
    max-width: 285px;
}

.col_padding {
    padding-right: 85px;
}

/* Job Offers End */

.mobile_design_vd {
    display: none;
}

.strAbout {
    padding-left: 30px;
}

.gap_57 {
    gap: 57px;
}

.padding_left {
    padding-left: 34px;
}

.edit_Btn {
    background: transparent;
    border: none;
}


/* edit_player_profile */
.edit_player_profile {
    border-radius: 100px;
    background: #141736;
    display: inline-flex;
    padding: 8px 24px;
    align-items: center;
    gap: 6px;
    color: #FFF !important;
    font-family: 'SF Pro Display', sans-serif;
    font-size: 12px;
    font-style: normal;
    font-weight: 700;
    line-height: normal;
    margin-bottom: 31px;
}

.edit_player_profile a {
    color: #FFF;
}

.edit_profile_input input {
    padding: 18px 16px;
    border-radius: 5px;
    background: #FFF;
    border: none;

}

.edit_player_details_wrapper input::placeholder,
.personal_info_edit_wrapper input ::placeholder {
    color: #A5B4CB;
    font-family: 'SF Pro Display', sans-serif;
    font-size: 16px;
    font-style: normal;
    font-weight: 400;
    line-height: normal;
}

.edit_player_details_wrapper label {
    font-family: 'SF Pro Display', sans-serif;
    color: #000;
    font-size: 16px;
    font-style: normal;
    font-weight: 500;
    line-height: normal;
}

.editpersonal_info {
    padding: 40px !important;
    border-radius: 12px;
    background: #FFF;
    border: none;
    box-shadow: 3px 16px 50px -2px rgba(121, 120, 130, 0.15);
}

.personal_info_edit_wrapper input {
    padding: 12px 16px;
    border: 1px solid #F0F0F0;
}

.personal_info_edit_wrapper label {
    margin-bottom: 12px;
}

.experience_update_wrapper {
    display: flex;
    flex-direction: column;
    gap: 36px;
}

.experience_update_wrapper1 {
    display: flex;
    flex-direction: column;
    gap: 24px;
}

.experience_update_wrapper label,
.experience_update_wrapper1 label {
    color: #141736;
    font-family: 'SF Pro Display', sans-serif;
    font-size: 16px;
    font-style: normal;
    font-weight: 500;
    line-height: normal;
}

.experience_update_wrapper input::placeholder,
.experience_update_wrapper1 input::placeholder {
    color: #A5B4CB;
    font-family: 'SF Pro Display', sans-serif;

    font-size: 16px;
    font-style: normal;
    font-weight: 400;
    line-height: normal;
}

.add_more_btn {
    padding: 12px 16px;
    border-radius: 5px;
    background: #0177FB;
    /* margin-top: 41px; */
    color: #FFF;
    font-family: 'SF Pro Display', sans-serif;
    font-size: 16px;
    font-style: normal;
    font-weight: 500;
    line-height: normal;
    display: flex;
    align-items: center;
    gap: 8px;
    justify-content: center;
    width: 100%;
}

/* style={{marginBottom:"30px",marginLeft:"75px"}} */
.experience_wrapper {
    margin-bottom: 30px;
    margin-right: 40px;
    margin-left: 75px;
}

.about_me_editField {
    padding: 18px 16px;
    color: #A5B4CB;
    font-family: 'SF Pro Display', sans-serif;
    font-size: 16px;
    font-style: normal;
    font-weight: 400;
    line-height: 24px;
    height: 205px;
    border-radius: 5px;
    border: 1px solid #F0F0F0;
}

.add_image_btn {
    padding: 4px 8px;
    border-radius: 5px;
    border: 1px solid #0177FB;
    background-color: none !important;
    display: flex;
    justify-content: center;
    align-items: center !important;
    gap: 4px;
    color: #0177FB;
    font-family: 'SF Pro Display', sans-serif;
    font-size: 14px;
    font-style: normal;
    font-weight: 400;
    /* line-height: normal; */
}

.mb_28 {
    margin-bottom: 28px;
}

.playerDetailsUpdate_btn {
    padding: 18px 0px;
    border-radius: 5px;
    background: #0177FB;
    color: #FFF;
    font-family: 'SF Pro Display', sans-serif;
    font-size: 16px;
    font-style: normal;
    font-weight: 500;
    line-height: normal;
    max-width: 339px;
    width: 100%;

}

.swiper-slide img {
    max-width: 285px;
    width: 100%;
    height: 196px;
    border-radius: 7px;

}

.upload_profile_image {
    /* background-image: url('/src/assets/updateplayerimg.png');
    max-width: 252px;
    width: 100%;
    height: 584px;
    padding-left: 50px;
    filter: blur(8px);
    -webkit-filter: blur(8px);   */
    position: relative;
}
.upload_profile_image .profiles{
    width: 252px;
height: 584px;
}

.profile_upload_btn {
    display: inline-flex;
    padding: 8px 16px;
    flex-direction: column;
    align-items: center;
    gap: 4px;
    border-radius: 5px;
    border: 1px solid #FFF;
    background-color: transparent !important;
    position: absolute;
    top: 44%;
    color: #FFF;
    left: 27%;
}

@media only screen and (max-width:425px) {

    .personalInfo .message {
        right: 0;
    }

    .fs_40 {
        font-size: 30px;
    }

    .fs_28 {
        font-size: 20px;
    }

    .job_offer {
        padding: 40px !important;
    }
}

@media only screen and (max-width:768px) {
    .about_part {
        padding-left: 50px !important;
        padding-right: 50px !important;
    }

    .social_icon {
        height: 17px !important;
        width: 17px !important;
    }

    .p_35 {
        padding: 0 35px !important;
    }

    .m_35 {
        margin: 0 35px !important;
    }

    .col_padding {
        padding-right: 0px !important;
    }



    .strAbout {
        padding-left: 0px !important;
    }

    .job_offer {
        padding: 0px !important;
    }

    .info_title_mobile {
        font-size: 11px !important;
    }

    .fs_15 {
        font-size: 10.6px !important;
    }

    .fs_17 {
        font-size: 12.089px !important;
    }

    .desktop_vd {
        display: none;
    }

    .mobile_design_vd {
        display: block;
    }

    .col_padding p:first-child {
        font-size: 14px !important;
        font-style: normal !important;
        font-weight: 500 !important;
        line-height: normal !important;

    }

    .col_padding p {
        font-size: 12px !important;
        font-style: normal !important;
        font-weight: 400 !important;
        line-height: normal !important;
        line-height: 17px;
    }

    .col_padding a {
        color: #0177FB;
        font-family: 'SF Pro Display', sans-serif;
        font-size: 12px;
        font-style: normal;
        font-weight: 400;
        line-height: 17.067px;
    }

    .col_padding {
        margin-bottom: 32px !important;
    }

    .col_padding:first-child {
        margin-top: 62px !important;
    }

    .personalInfo {
        margin-top: 39px !important;
    }

    .experience_wrapper {
        margin-bottom: 30px;
        margin-right: 0 !important;
        margin-left: 0 !important;
    }

    /* edit player profile */


}


/* 

 const [formData, setFormData] = useState({
        experiences: [{ startYear: '', endYear: '' }],
        socialMedia: {
            instagram: '',
            facebook: '',
            twitter: '',
        },
    });

    const handleChange = (e, index) => {
        const { name, value } = e.target;
        const updatedExperiences = [...formData.experiences];
        updatedExperiences[index] = {
            ...updatedExperiences[index],
            [name]: value,
        };
        setFormData((prevData) => ({
            ...prevData,
            experiences: updatedExperiences,
        }));

        // Pass the input values to the parent component
        handleInputChange({ ...formData, experiences: updatedExperiences });
    };

    const handleSocialMediaChange = (platform, value) => {
        setFormData((prevData) => ({
            ...prevData,
            socialMedia: {
                ...prevData.socialMedia,
                [platform]: value,
            },
        }));

        // Pass the input values to the parent component
        handleInputChange({ ...formData, socialMedia: { ...formData.socialMedia, [platform]: value } });
    };

    const handleAddMore = () => {
        setFormData((prevData) => ({
            ...prevData,
            experiences: [...prevData.experiences, { startYear: '', endYear: '' }],
        }));
    };


*/